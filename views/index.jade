extends layout

block styles
    link(rel="stylesheet", href="/stylesheets/style.css")
    link(rel="stylesheet", href="/stylesheets/blueimp-gallery.min.css")
    // CSS to style the file input field as button and adjust the Bootstrap progress bars
    link(rel="stylesheet", href="/stylesheets/jquery.fileupload.css")
    link(rel="stylesheet", href="/stylesheets/jquery.fileupload-ui.css")

block content
    .container
        .form-wrapper
            // The file upload form used as target for the file upload widget
            form#fileupload(action="/upload", method="POST", enctype="multipart/form-data")
                // The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
                .row.fileupload-buttonbar
                    .col-lg-7
                        // The fileinput-button span is used to style the file input field as button
                        button.btn.btn-success.fileinput-button
                            i.glyphicon.glyphicon-plus
                            span &nbsp;Add files
                            input(type="file", name="files[]", multiple="")
                        button.btn.btn-primary.start(type="submit")
                            i.glyphicon.glyphicon-upload
                            span &nbsp;Upload all files
                        button.btn.btn-warning.cancel(type="reset")
                            i.glyphicon.glyphicon-ban-circle
                            span &nbsp;Cancel all uploads
                        button.btn.btn-danger.delete(type="button")
                            i.glyphicon.glyphicon-trash
                            span &nbsp;Delete all files
                        input.toggle(type="checkbox")
                        // The global file processing state
                        span.fileupload-process
                    // The global progress state
                    .col-lg-5.fileupload-progress.fade
                        // The global progress bar
                        .progress.progress-striped.active(role="progressbar", aria-valuemin="0", aria-valuemax="100")
                            .progress-bar.progress-bar-success(style="width:0%;")
                        // The extended global progress state
                        .progress-extended  
                // The table listing the files available for upload/download
                table.table.table-striped(role="presentation")
                    tbody.files

    // The blueimp Gallery widget
    #blueimp-gallery.blueimp-gallery.blueimp-gallery-controls(data-filter=":even")
        .slides
        h3.title
        a.prev ‹
        a.next ›
        a.close ×
        a.play-pause
        ol.indicator

    // The template to display files available for uploading.
    script#template-upload(type="text/x-tmpl").
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-upload fade">
                <td>
                    <span class="preview"></span>
                </td>
                <td>
                    <p class="name">{%=file.name%}</p>
                    <strong class="error text-danger"></strong>
                </td>
                <td>
                    <p class="size">Processing...</p>
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
                </td>
                <td>
                    {% if (!i && !o.options.autoUpload) { %}
                        <button class="btn btn-primary start" disabled>
                            <i class="glyphicon glyphicon-upload"></i>
                            <span>Upload</span>
                        </button>
                    {% } %}
                    {% if (!i) { %}
                        <button class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel</span>
                        </button>
                    {% } %}
                </td>
            </tr>
        {% } %}

    //
        The template to display files available for downloading.
        Thumbnails are not being generated for aws that's why I use file.awsFile instead.
    script#template-download(type="text/x-tmpl").
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-download fade">
                <td>
                    <span class="preview">
                        {% if (file.thumbnailUrl) { %}
                            <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                        {% } else if (file.size == 0) { %}
                            <span class="glyphicon glyphicon-folder-open" aria-hidden="true"></span>
                        {% } else { %}
                            <a href="{%=file.awsFile%}" title="{%=file.name%}" download="{%=file.awsFile%}" data-gallery><img src="{%=file.awsFile%}"></a>
                        {% } %}
                    </span>
                </td>
                <td>
                    <p class="name">
                        {% if (file.url) { %}
                            <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                        {% } else { %}
                            <a href="{%=file.awsFile%}" title="{%=file.name%}" download="{%=file.awsFile%}">{%=file.name%}</a>
                        {% } %}
                    </p>
                    {% if (file.error) { %}
                        <div><span class="label label-danger">Error</span> {%=file.error%}</div>
                    {% } %}
                </td>
                <td>
                    <span class="size">{%=o.formatFileSize(file.size)%}</span>
                </td>
                <td>
                    {% if (file.deleteUrl) { %}
                        <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Delete</span>
                        </button>
                        <input type="checkbox" name="delete" value="1" class="toggle">
                    {% } else { %}
                        <button class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel</span>
                        </button>
                    {% } %}
                </td>
            </tr>
        {% } %}

block scripts
    // The jQuery UI widget factory, can be omitted if jQuery UI is already included
    script(src="/javascripts/uploader/jquery.ui.widget.js")
    // The Templates plugin is included to render the upload/download listings
    script(src="/javascripts/uploader/tmpl.min.js")
    // The Load Image plugin is included for the preview images and image resizing functionality
    script(src="/javascripts/uploader/load-image.min.js")
    // The Canvas to Blob plugin is included for image resizing functionality
    script(src="/javascripts/uploader/canvas-to-blob.min.js")
    // blueimp Gallery script
    script(src="/javascripts/uploader/jquery.blueimp-gallery.min.js")
    // The Iframe Transport is required for browsers without support for XHR file uploads
    script(src="/javascripts/uploader/jquery.iframe-transport.js")
    // The basic File Upload plugin
    script(src="/javascripts/uploader/jquery.fileupload.js")
    // The File Upload processing plugin
    script(src="/javascripts/uploader/jquery.fileupload-process.js")
    // The File Upload image preview & resize plugin
    script(src="/javascripts/uploader/jquery.fileupload-image.js")
    // The File Upload audio preview plugin
    script(src="/javascripts/uploader/jquery.fileupload-audio.js")
    // The File Upload video preview plugin
    script(src="/javascripts/uploader/jquery.fileupload-video.js")
    // The File Upload validation plugin
    script(src="/javascripts/uploader/jquery.fileupload-validate.js")
    // The File Upload user interface plugin
    script(src="/javascripts/uploader/jquery.fileupload-ui.js")
    // The main application script
    script(src="/javascripts/uploader/main.js")
    // The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9
    //if (gte IE 8)&(lt IE 10)
        script(src="/javascripts/uploader/cors/jquery.xdr-transport.js")
